openapi: "3.0.0"
info:
  version: 1.0.0
  title: Swagger Petstore
  license:
    name: MIT
    identifier: test
webhooks:
  # Each webhook needs a name
  newPet:
    # This is a Path Item Object, the only difference is that the request is initiated by the API provider
    post:
      requestBody:
        description: Information about a new pet in the system
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pet"
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received successfully
  newUser:
    # This is a Path Item Object, the only difference is that the request is initiated by the API provider
    post:
      requestBody:
        description: Information about a new user in the system
        content:
          application/json:
            schema:
              $ref: 'http://localhost:1337/petstore30ext1.yaml#/components/schemas/User'
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received successfully
paths:
  /pets:
    get:
      summary: List all pets
      operationId: listPets
      tags:
        - pets
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: An paged array of pets
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pets"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: 'http://localhost:1337/petstore30ext2.yaml#/components/schemas/Error'
    post:
      summary: Create a pet
      operationId: createPets
      tags:
        - pets
      responses:
        "201":
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: 'http://localhost:1337/petstore30ext2.yaml#/components/schemas/Error'
  /pets/{petId}:
    get:
      summary: Info for a specific pet
      operationId: showPetById
      tags:
        - pets
      parameters:
        - name: petId
          in: path
          required: true
          description: The id of the pet to retrieve
          schema:
            type: string
      responses:
        "200":
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pets"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: './petstore30ext2.yaml#/components/schemas/Error'
  /users:
    post:
      tags:
        - user
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      requestBody:
        description: Created user object
        content:
          application/custom:
            schema:
              $ref: 'http://localhost:1337/petstore30ext1.yaml#/components/schemas/User'
          application/json:
            schema:
              $ref: 'http://localhost:1337/petstore30ext1.yaml#/components/schemas/User'
          application/xml:
            schema:
              $ref: 'http://localhost:1337/petstore30ext1.yaml#/components/schemas/User'
      responses:
        default:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: './petstore30ext1.yaml#/components/schemas/User'
            application/xml:
              schema:
                $ref: './petstore30ext1.yaml#/components/schemas/User'
  /user/{username}:
    $ref: 'http://localhost:1337/petstore30ext1.yaml#/components/pathItems/getUserByName'
components:
  schemas:
    Pet:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
    Pets:
      type: array
      items:
        $ref: "#/components/schemas/Pet"
        description: desc
        format: int32
